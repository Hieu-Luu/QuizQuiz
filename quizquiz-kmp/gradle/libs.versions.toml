[versions]
agp = "8.2.2"
android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"
androidx-activityCompose = "1.9.0"
androidx-appcompat = "1.6.1"
androidx-constraintlayout = "2.1.4"
androidx-core-ktx = "1.13.1"
androidx-espresso-core = "3.5.1"
androidx-material = "1.12.0"
androidx-test-junit = "1.1.5"
coroutines = "1.8.1"
compose-plugin = "1.6.10"
viewmodel-compose = "2.8.0"
junit = "4.13.2"
kotlin = "2.0.0"
kotlinx-serialization = "1.7.1"
ktor = "3.0.0-wasm2"
ktor-server = "2.3.11"
koin = "3.6.0-wasm-alpha2"
logback = "1.5.6"
lachong-mutiplatform-clean-data = "0.0.1"
mongo-version = "4.9.0"
exposed-version = "0.41.1"
jsonpath-version = "2.9.0"
swagger-ui-version = "2.9.0"
postgresql-version = "42.5.1"
gcp-appengine = "2.4.5"
jar-shadow = "8.1.1"
mapsplatform-secret = "2.0.1"
coil = "2.5.0"
junitVersion = "4.13.1"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
androidx-material = { group = "com.google.android.material", name = "material", version.ref = "androidx-material" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "viewmodel-compose" }
common-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
# Coroutines
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
# Ktor client-wasm
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-java = { module = "io.ktor:ktor-client-java", version.ref = "ktor" }
ktor-client-json = { group = "io.ktor", name = "ktor-client-json", version.ref = "ktor" }
ktor-client-serialization = { group = "io.ktor", name = "ktor-client-serialization", version.ref = "ktor" }
#noinspection SimilarGradleDependency
ktor-client-content-negotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor" }
# Ktor server
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor-server" }
ktor-server-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json-jvm", version.ref = "ktor-server" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation-jvm", version.ref = "ktor-server" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth-jvm", version.ref = "ktor-server" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt-jvm", version.ref = "ktor-server" }
ktor-server-config-yaml = { module = "io.ktor:ktor-server-config-yaml", version.ref = "ktor-server" }
ktor-server-status-pages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor-server" }
ktor-server-sessions = { module = "io.ktor:ktor-server-sessions-jvm", version.ref = "ktor-server" }
ktor-server-websockets = { module = "io.ktor:ktor-server-websockets-jvm", version.ref = "ktor-server" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor-server" }
ktor-server-tests = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor-server" }
ktor-swagger-ui = { module = "io.github.smiley4:ktor-swagger-ui", version.ref = "swagger-ui-version"}
ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
# Ktor client for server test
ktor-client-core-jvm = { module = "io.ktor:ktor-client-core-jvm", version.ref = "ktor-server" }
#noinspection SimilarGradleDependency
ktor-client-content-negotiation-jvm = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor-server" }
ktor-client-apache-jvm = { module = "io.ktor:ktor-client-apache-jvm", version.ref = "ktor-server" }
# start Koin-wasm
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-android-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
# end Koin-wasm
mutiplatform-clean-data = { module = "vn.lachong.kotlinx.multiplatform:library", version.ref = "lachong-mutiplatform-clean-data" }
mutiplatform-clean-data-jvm = { module = "vn.lachong.kotlinx.multiplatform:library-jvm", version.ref = "lachong-mutiplatform-clean-data" }
mutiplatform-clean-data-android = { module = "vn.lachong.kotlinx.multiplatform:library-android", version.ref = "lachong-mutiplatform-clean-data" }
mongodb-driver-core = { module = "org.mongodb:mongodb-driver-core", version.ref = "mongo-version" }
mongodb-driver-sync =  { module = "org.mongodb:mongodb-driver-sync", version.ref = "mongo-version" }
mongodb-bson = { module = "org.mongodb:bson", version.ref = "mongo-version" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed-version" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed-version" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed-version" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql-version" }
jsonpath = { module = "com.jayway.jsonpath:json-path", version.ref = "jsonpath-version" }
coil = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
junit-junit = { group = "junit", name = "junit", version.ref = "junitVersion" }

[bundles]
ktor-common = ["ktor-client-core", "ktor-client-json", "ktor-client-logging", "ktor-client-serialization", "ktor-client-content-negotiation", "ktor-serialization-json"]

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ktor-serer = { id = "io.ktor.plugin", version.ref = "ktor-server" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
gcpAppEngine = { id = "com.google.cloud.tools.appengine", version.ref = "gcp-appengine" }
jarShadow = { id = "com.github.johnrengelman.shadow", version.ref = "jar-shadow" }
mapsplatformSecret = { id = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin", version.ref = "mapsplatform-secret" }